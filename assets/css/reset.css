/*
 * Universal CSS Boilerplate
 * Created by: Fatih YILDIZ
 * Website: fthyldz.com
 * Version: 1.0.0
 * Date: April 15, 2025
 * Description: A clean and structured CSS boilerplate optimized for all projects.
 * Includes accessibility, responsive design, and performance enhancements.
 */

/* 
   Global Variables: Define colors, fonts, and base styles.
   Using CSS variables ensures easy customization and maintainability.
*/
:root {
    --font-base: 16px;
    --font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;

    /* RGB color definitions for consistency */
    --rgb-Red: rgb(255, 0, 0);
    --rgb-Green: rgb(0, 255, 0);
    --rgb-Blue: rgb(0, 0, 255);
    --rgb-Yellow: rgb(255, 255, 0);
    --rgb-Cyan: rgb(0, 255, 255);
    --rgb-Magenta: rgb(255, 0, 255);
    --rgb-Orange: rgb(255, 128, 0);
    --rgb-Grey: rgb(128, 128, 128);
    --rgb-Black: rgb(0, 0, 0);

    /* Theme colors for light/dark mode */
    --theme-dark-color: #000;
    --theme-light-color: #fff;
    --theme-dark-border: #333;
    --theme-light-border: #ccc;
}

/* 
   Apply global styles to the HTML document.
   - Box-sizing ensures consistent spacing calculations.
   - Scroll behavior makes page navigation smoother.
   - Text adjustments improve readability across devices.
*/
html {
    box-sizing: border-box;
    font-size: var(--font-base);
    line-height: 1.5;
    scroll-behavior: smooth;
    -webkit-text-size-adjust: 100%;
    text-size-adjust: 100%;
    word-break: normal;
    -webkit-tap-highlight-color: rgba(102, 102, 102, 0.3);
}

/* 
   Reset default styles for all elements.
   - Ensures a consistent layout across browsers.
   - Removes default margins and paddings.
*/
*,
*::before,
*::after {
    box-sizing: inherit;
    margin: 0;
    padding: 0;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
}

/* 
   Body styles for a clean layout.
   - Full height ensures proper flexbox/grid positioning.
   - Font smoothing enhances text rendering quality.
*/
body {
    margin: 0;
    width: 100%;
    min-height: 100vh;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeSpeed;
}

/* 
   Link styles:
   - Removes default underline.
   - Adds padding for better clickability.
   - Enables smooth transitions.
*/
a {
    text-decoration: none;
    display: inline-block;
    padding: .2em .1em;
    margin: .3em .2em;
    cursor: pointer;
}

/* 
   Button styling:
   - Ensures proper padding and font consistency.
   - Adds rounded corners for better aesthetics.
   - Cursor pointer indicates interactivity.
*/
button {
    padding: .2em .3em;
    cursor: pointer;
    white-space: nowrap;
    font-size: var(--font-base);
    border-radius: 4px;
}

/* Accessibility improvements: 
   - Outlines on focus ensure keyboard navigation visibility.
   - CurrentColor makes outlines adapt to the text color.
*/
a:focus,
button:focus,
input:focus {
    outline: 2px solid currentColor;
}

/* 
   Universal link styling:
   - The `:any-link` pseudo-class applies styles to all types of links (`<a>`, `<area>`).
   - This ensures consistency without needing separate styles for `:link`, `:visited`, etc.
   - Removes default underlines for a cleaner design.
   - Sets display to `inline-block`, allowing better control over spacing and alignment.
   - Adds padding to enhance clickable area and improve usability.
*/
:any-link {
    text-decoration: none;
    display: inline-block;
    padding: 0.2em 0.3em;
    margin: 0.2em 0.1em;
}

/* 
   Removes default list styles for cleaner designs.
*/
ul,
ol {
    list-style: none;
}

/* 
   Semantic list styling:
   - Targets unordered lists (`<ul>`) that explicitly have `role="list"`.
   - `role="list"` is used for accessibility, ensuring screen readers interpret it correctly.
   - Removes default bullet points (`list-style-type: none`) for a cleaner layout.
   - Eliminates padding to maintain consistent spacing with surrounding elements.
*/
ul[role="list"] {
    list-style-type: none;
    padding: 0;
}

/* 
   Preserve inheritance for form elements:
   - Ensures consistency in typography.
   - Removes unnecessary browser-default styles.
*/
button,
input,
textarea,
select {
    font: inherit;
    background: none;
    border: none;
    margin: .3em .2em;
    color: inherit;
}

/* 
   Ensure responsive images and media elements.
   - `display: block` prevents unwanted inline gaps.
   - `max-width: 100%` makes images fluid across screen sizes.
*/
img,
picture,
audio,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
    height: auto;
    border: 0;
}

/* 
   Apply currentColor for SVG icons.
   - Allows flexible icon customization based on text color.
*/
svg {
    fill: currentColor;
    stroke: currentColor;
}

/* 
   Horizontal rule styling:
   - Ensures the <hr> element is always visible by setting a height of 1px.
   - Removes the default browser styling for borders.
   - Uses a solid top border with theme color to fit dark/light modes.
   - Applies a subtle box-shadow for a refined, modern look.
*/
hr {
    display: block;
    height: 1px;
    border: none;
    border-top: 2px solid var(--theme-dark-color);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin: 1em 0;
}

/* 
   Preformatted text (<pre>) styling:
   - Forces wrapping to prevent horizontal overflow in small screens.
   - Maintains readability by preserving whitespace formatting.
*/
pre {
    white-space: pre-wrap;
}

/* 
   Text elements styling:
   - Prevents text overflow issues with `overflow-wrap: anywhere`.
   - Ensures long words or code snippets break properly instead of exceeding container width.
   - Helps maintain readability in responsive designs.
*/
p,
h1,
h2,
h3,
h4,
h5,
h6,
code {
    overflow-wrap: anywhere;
}

/* 
   Themed background styles:
   - Adjusts colors based on light/dark preference.
*/
@media (prefers-color-scheme: dark) {
    html {
        background-color: var(--theme-dark-color);
        color: var(--theme-light-color);
    }

    input,
    textarea,
    button,
    hr {
        background-color: var(--theme-dark-color);
        color: var(--theme-light-color);
        border: 1px solid var(--theme-light-border);
    }
}

@media (prefers-color-scheme: light) {
    html {
        background-color: var(--theme-light-color);
        color: var(--theme-dark-color);
    }

    input,
    textarea,
    button,
    hr {
        background-color: var(--theme-light-color);
        color: var(--theme-dark-color);
        border: 1px solid var(--theme-light-border);
    }
}

/* 
   Responsive font scaling:
   - Adjusts font size for different screen widths.
*/
@media (max-width: 480px) {
    html {
        font-size: calc(var(--font-base) * 0.75);
    }
}

@media (max-width: 768px) {
    html {
        font-size: calc(var(--font-base) * 0.875);
    }
}

@media (min-width: 1024px) {
    html {
        font-size: calc(var(--font-base) * 1.125);
    }
}

@media (min-width: 1200px) {
    html {
        font-size: calc(var(--font-base) * 1.25);
    }
}

/* 
   Accessibility improvements for high-contrast mode.
   - Enlarges padding and font sizes for touch interactions.
*/
@media (any-pointer: coarse) {

    a,
    button,
    input {
        padding: .5em .8em;
        font-size: 1em;
        outline: 1px solid currentColor;
        outline-offset: 1px;
    }

    a {
        display: inline-block;
        padding: .4em 1em;
        margin: 0.4em 0;
        font-size: 1em;
    }

    a:focus {
        outline: 2px solid;
    }
}

/* 
   Print optimization:
   - Removes backgrounds and shadows for clear printing.
   - Ensures readability in printed documents.
*/
@media print {

    *,
    *::before,
    *::after {
        background-image: none !important;
        background: #fff !important;
        color: #000 !important;
        box-shadow: none !important;
        text-shadow: none !important;
    }

    :any-link,
    a,
    a:visited {
        text-decoration: underline;
    }

    :any-link::after,
    a[href]::after {
        content: " (" attr(href) ")";
        font-size: 80%;
    }

    abbr[title]::after {
        content: " (" attr(title) ")";
    }

    /*
    * Don't show links that are fragment identifiers,
    * or use the `javascript:` pseudo protocol
   */
    a[href^="#"]::after,
    a[href^="javascript:"]::after {
        content: "";
    }

    pre {
        white-space: pre-wrap !important;
    }

    blockquote,
    pre {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    body {
        color: #000 !important;
        background-color: #fff !important;
        margin: 0;
        font-size: 120%;
        line-height: 130%;
    }

    img.print,
    svg.print {
        display: block;
        max-width: 100%;
    }

    img.dark {
        filter: invert(100%) hue-rotate(180deg) brightness(120%) contrast(150%);
    }

    header *,
    footer *,
    aside *,
    nav *,
    form *,
    iframe *,
    .menu *,
    .hero *,
    .adslot * {
        display: none;
    }

    article {
        column-width: 20em;
        column-gap: 3em;
    }

    main::after {
        content: ".:: Copyright Fatih YILDIZ | fthyldz.com ::.";
        display: block;
        text-align: center;
        font-size: 60%;
    }

    h1 {
        -webkit-page-break-before: always;
        page-break-before: always;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }

    table,
    img,
    svg {
        -webkit-break-inside: avoid;
        break-inside: avoid;
    }

    /* 
    Print-specific page margins:
    - The `@page` rule defines global margins for printed documents.
    - Ensures a consistent spacing of 1cm around the entire page.
    */
    @page {
        margin: 1cm;
    }

    /* 
    First page styling:
    - Adds extra top margin (4cm) to the first page.
    - Useful for documents with cover pages or title sections.
    */
    @page :first {
        margin-top: 4cm;
    }

    /* 
    Left and right page customization:
    - These rules apply to multi-page printed documents.
    - `@page :left` adds extra margin to the right side of left-facing pages.
    - `@page :right` adds extra margin to the left side of right-facing pages.
    - Helps improve readability for printed books or reports.
    */
    @page :left {
        margin-right: 2cm;
    }

    @page :right {
        margin-left: 1cm;
    }
}

/* 
   Reduce motion for accessibility:
   - Disables animations for users preferring minimal motion.
*/
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/*
 * Hide from screen readers
 */
[hidden] {
    display: none !important;
}

/* 
   Screen reader friendly hidden elements:
   - Hides content visually while keeping it accessible.
*/
.visually-hidden {
    position: absolute;
    clip: rect(0 0 0 0);
    width: 1px;
    height: 1px;
    overflow: hidden;
    white-space: nowrap;
    border: 0;
    padding: 0;
    margin: -1px;
}
